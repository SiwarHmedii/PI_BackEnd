name: CI/CD with SonarCloud and Nexus

on:
  push:
    branches: [ProjetMariem ]
  pull_request:
    branches: [ProjetMariem ]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      NEXUS_USERNAME: admin
      NEXUS_PASSWORD: admin
      NEXUS_URL: 5cba-197-22-124-102.ngrok-free.app   # <-- ici sans https://
      SONAR_TOKEN: ${{ secrets.SONARCLOUD_SECRET_TOKEN }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Configure Maven settings.xml
        run: |
          mkdir -p ~/.m2
          echo "<settings>
            <servers>
              <server>
                <id>nexus</id>
                <username>${NEXUS_USERNAME}</username>
                <password>${NEXUS_PASSWORD}</password>
              </server>
            </servers>
          </settings>" > ~/.m2/settings.xml
        env:
          NEXUS_USERNAME: ${{ secrets.NEXUS_USERNAME }}
          NEXUS_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}

      - name: Build project (skip tests)
        run: mvn clean install -DskipTests

      - name: SonarCloud Analysis
        run: |
          mvn org.sonarsource.scanner.maven:sonar-maven-plugin:5.1.0.4751:sonar \
            -Dsonar.projectKey=PIDEVSpring_BackendSpring \
            -Dsonar.organization=pidevspringprojects \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=$SONARCLOUD_SECRET_TOKEN
        env:
          SONAR_TOKEN: ${{ env.SONARCLOUD_SECRET_TOKEN }}

      - name: Deploy .jar to Nexus (Maven)
        run: mvn deploy
        env:
          NEXUS_USERNAME: ${{ env.NEXUS_USERNAME }}
          NEXUS_PASSWORD: ${{ env.NEXUS_PASSWORD }}

          # - name: Build Docker Image
          #   run: docker build -t mon-app:latest .

          # - name: Tag Docker Image
          #   run: docker tag mon-app:latest ${NEXUS_URL}/repository/docker-repo/mon-app:latest

          # - name: Docker Login to Nexus
          #   run: echo "$NEXUS_PASSWORD" | docker login ${NEXUS_URL} -u $NEXUS_USERNAME --password-stdin
          #   env:
          #     NEXUS_USERNAME: ${{ env.NEXUS_USERNAME }}
          #     NEXUS_PASSWORD: ${{ env.NEXUS_PASSWORD }}

          # - name: Push Docker Image to Nexus
          #   run: docker push ${NEXUS_URL}/repository/docker-repo/mon-app:latest
          #   env:
          #     NEXUS_USERNAME: ${{ env.NEXUS_USERNAME }}
          #     NEXUS_PASSWORD: ${{ env.NEXUS_PASSWORD }}