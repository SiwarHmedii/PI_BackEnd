<<<<<<< HEAD
version: '3.8'
=======
version: "3.8"
>>>>>>> cd4a61c9982a52bc082634662ee55f2633f8d5e8

services:
  mysql:
    image: mysql:8.0
<<<<<<< HEAD
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword # <-- This sets the root password
      MYSQL_DATABASE: pi
      # Removing MYSQL_USER/PASSWORD for 'root' if MYSQL_ROOT_PASSWORD is set,
      # as MYSQL_ROOT_PASSWORD handles the root user.
      # If you want a *separate* non-root user, define it like this:
      # MYSQL_USER: myuser
      # MYSQL_PASSWORD: mypassword
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql

  backendpi:
    build: .
    container_name: pi-backendpi-1
    ports:
      - "8081:8081"
    depends_on:
      - mysql
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/pi?createDatabaseIfNotExist=true&useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: rootpassword # <-- IMPORTANT: This MUST now match MYSQL_ROOT_PASSWORD!
      SPRING_MAIL_HOST: smtp.gmail.com
      SPRING_MAIL_PORT: 587
      SPRING_MAIL_USERNAME: ziedtuihri@gmail.com
      SPRING_MAIL_PASSWORD: fefk ofil layf ciqg
      SPRING_MAIL_PROPERTIES_MAIL_SMTP_TRUST: "*"
      SPRING_MAIL_PROPERTIES_MAIL_SMTP_AUTH: "true"
      SPRING_MAIL_PROPERTIES_MAIL_SMTP_STARTTLS_ENABLE: "true"
      SPRING_MAIL_PROPERTIES_MAIL_SMTP_CONNECTIONTIMEOUT: 5000
      SPRING_MAIL_PROPERTIES_MAIL_SMTP_TIMEOUT: 3000
      SPRING_MAIL_PROPERTIES_MAIL_SMTP_WRITETIMEUT: 5000
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI: http://localhost:8081/realms/pi-school
      FILE_UPLOAD_DIR: /app/uploads/

  nexus:
    image: sonatype/nexus3
    container_name: nexus
    ports:
      - "8083:8081"
    volumes:
      - nexus-data:/nexus-data
    restart: always

volumes:
  mysql_data:
  nexus-data:
=======
    container_name: mysql_container
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: pidevbi
      MYSQL_USER: springuser
      MYSQL_PASSWORD: springpassword
    ports:
      - "3306:3306" # Maps h3ost port 3307 to container MySQL port 3306
    volumes:
      - mysql_data:/var/lib/mysql # Persists MySQL data

  backendpi:
    build: . # Builds the Docker image from the current directory (where Dockerfile is)
    ports:
      - "8082:8082" # IMPORTANT: Map host port 8081 to container port 8081
      # This aligns with server.port=8081 in your application.properties
    depends_on:
      - mysql # Ensures MySQL starts before the backend
    environment:
      # These environment variables override/set Spring properties in application.properties
      # They ensure the backend connects to the 'mysql' service within the Docker network
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/pidevbi?createDatabaseIfNotExist=true
      SPRING_DATASOURCE_USERNAME: springuser
      SPRING_DATASOURCE_PASSWORD: springpassword
    # The 'command' is removed here because the wait-for-it.sh and app.jar execution
    # are already handled by the ENTRYPOINT in your Dockerfile.
    # command: >
    #   ./wait-for-it.sh mysql:3306 -- java -jar app.jar


volumes:
  mysql_data: # Defines a named volume for MySQL data persistence
>>>>>>> cd4a61c9982a52bc082634662ee55f2633f8d5e8
