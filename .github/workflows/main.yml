name: Siwar CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build JAR with Maven (skip tests)
        run: mvn clean package -DskipTests
        working-directory: ./pi

      - name: List target directory
        run: ls -l ./pi/target

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Run tests with Maven
        run: mvn test
        working-directory: ./pi

  sonar:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar

      - name: SonarCloud scan
        run: mvn -B verify -DskipTests org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=SiwarHmedii_PI_BackEnd
        working-directory: ./pi
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  docker:
    needs: sonar
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Docker Hub Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker Nexus Login
        run: echo "${{ secrets.NEXUS_PASSWORD }}" | docker login 9643-160-156-242-204.ngrok-free.app  --username ${{ secrets.NEXUS_USERNAME }} --password-stdin

      - name: Build Docker image
        run: docker build -t 9643-160-156-242-204.ngrok-free.app/repository/docker-hosted/pi-app:latest .
        working-directory: ./pi

      - name: Push Docker image to Nexus
        run: docker push 9643-160-156-242-204.ngrok-free.app/repository/docker-hosted/pi-app:latest
